# 应用配置
app:
  name: "gin-demo"
  version: "1.0.0"
  env: "development"
  debug: true

# 服务器配置优化
server:
  port: 8080
  mode: "debug"
  enable_h2c: true
  read_timeout: "30s"
  write_timeout: "30s"
  shutdown_timeout: "10s"
  max_header_bytes: 1048576
  max_request_size: 10485760  # 10MB
  
  # HTTP/2 配置
  http2:
    max_concurrent_streams: 150
    idle_timeout: "180s"      # 增加空闲超时
    max_read_frame_size: 16384
    max_upload_buffer_per_connection: 32768  # 32KB
    max_upload_buffer_per_stream: 16384      # 16KB
    permit_prohibited_cipher_suites: false
    read_header_timeout: "10s"
  
  # 限流配置
  rate_limit:
    global:
      limit: 2
      window: "3s"  # 1分钟
    auth:
      limit: 20
      window: "1m"  # 认证接口更严格的限流

# 数据库配置优化
database:
  mysql:
    host: "127.0.0.1"
    port: 3306
    username: "root"
    password: "123456"
    database: "daka_dev"
    charset: "utf8mb4"
    parse_time: true
    loc: "Local"
    max_idle_conns: 20        # 根据实际负载调整
    max_open_conns: 50        # 根据实际负载调整
    conn_max_lifetime: "3600s" # 增加连接生命周期
    conn_max_idle_time: "900s" # 减少空闲时间
    dial_timeout: "10s"
    read_timeout: "30s"
    write_timeout: "30s"
  redis:
    host: "localhost"
    port: 6379
    password: ""
    db: 12
    pool_size: 50             # 增加连接池大小
    min_idle_conns: 10        # 增加最小空闲连接
    max_retries: 3
    pool_timeout: "30s"
    conn_max_idle_time: "1800s"
    dial_timeout: "10s"
    read_timeout: "15s"          # 减少读取超时
    write_timeout: "15s"         # 减少写入超时
    idle_timeout: "60s"          # 添加空闲超时
    max_header_bytes: 2097152    # 2MB
    max_request_size: 52428800   # 50MB

# JWT配置
jwt:
  secret: "your-super-secret-jwt-key-change-this-in-production-2024"
  expires_hours: 168
  refresh_expires_hours: 720
  issuer: "gin-demo"

# 日志配置优化
log:
  level: "error"
  format: "json"
  enable_color: true
  enable_caller: false
  enable_stacktrace: false

  # 性能优化配置
  performance:
    async_enabled: true           # 启用异步日志
    buffer_size: 2000            # 增加缓冲区
    worker_count: 8              # 增加工作协程
    batch_write_enabled: true
    batch_size: 200              # 增加批量大小
    flush_interval: "500ms"      # 减少刷新间隔
    queue_full_policy: "drop"    # 队列满时策略: drop(丢弃) 或 sync(同步处理)

  console:
    enabled: true
    level: "info"
    format: "text"
    enable_color: true

  file:
    enabled: true
    level: "error"
    format: "json"
    filename: "./logs/app.log"
    max_size: 50      # 增大到50MB以减少文件切换频率
    max_backups: 20   # 减少备份文件数量
    max_age: 7
    compress: true

  error_file:
    enabled: true
    level: "error"
    format: "json"
    filename: "./logs/error.log"
    max_size: 20      # 错误日志适中大小
    max_backups: 15
    max_age: 7
    compress: true

  database:
    enabled: true
    level: "error"
    log_all_sql: false           # 生产环境关闭
    slow_threshold: 100          # 降低慢查询阈值
    ignore_record_not_found: true
    filename: "./logs/database.log"
    max_size: 30      # 数据库日志可能较多
    max_backups: 20
    max_age: 7
    compress: true

  access:
    enabled: true
    format: "json"
    filename: "./logs/access.log"
    max_size: 100     # 访问日志通常最多，增大文件大小
    max_backups: 10   # 减少备份数量
    max_age: 7
    compress: true
    # 访问日志特定优化
    enable_request_body: true    # 是否记录请求体
    enable_response_body: false  # 是否记录响应体（仅错误时）
    enable_user_agent: true      # 是否记录User-Agent
    enable_trace_id: true        # 是否记录链路追踪ID

# 消息队列配置
queue:
  rmq:
    tag: "gin-demo-queue"  # 队列标识
    num_consumers: 10      # 默认消费者数量
    prefetch_limit: 1000   # 预取限制
    poll_duration: "100ms" # 轮询间隔
    report_batch_size: 100 # 报告批次大小
    retry_limit: 3         # 重试次数
    retry_delay: "5s"      # 重试延迟
  queues:
    # 预定义队列配置
    email:
      name: "email_queue"
      num_consumers: 5
      prefetch_limit: 100
    notification:
      name: "notification_queue"
      num_consumers: 3
      prefetch_limit: 50
    data_processing:
      name: "data_processing_queue"
      num_consumers: 8
      prefetch_limit: 200